//定义一个变量 
@color-red:#ccc;

 //运行
 @switch: dark;
 
//定义一个函数集合，可解决层叠性的问题
.border-radius (@radius) {
    border-radius: @radius;
    -moz-border-radius: @radius;
    -webkit-border-radius: @radius;
  }
// 定义一个函数集合，可设置默认值
  .box-shadow (@x: 10px, @y: 10px, @blur: 1px, @color: #000) {
    box-shadow: @arguments;
    -moz-box-shadow: @arguments;
    -webkit-box-shadow: @arguments;
  }


  //让.mixin根据不同的@switch值而表现各异

  .mixin (dark, @color) {
    color: darken(@color, 10%);
  }
  .mixin (light, @color) {
    color: lighten(@color, 10%);
  }
  
  .mixin (red, @color) {
    // display: block;
    color:@color;
  }
// then 导引使用 添加判断条件
  .mimax (@a) when (@a >= 50%) {
    background-color: black;
  }
  
  .mimax (@a) when (@a< 50%) {
    background-color: white;
  }

.box{
    width: 300px;
    height: 300px;
    background-color: @color-red;
    .border-radius(20px);
    .box-shadow();
    .mixin(light, yellow);
    .mimax(40%);
}
 

 
  
 



 